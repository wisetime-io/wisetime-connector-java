/*
 * Copyright (c) 2018 Practice Insight Pty Ltd. All Rights Reserved.
 */

buildscript {
    repositories {
        maven {
            url 'https://storage.googleapis.com/wise-repo/repos/plugins/'
        }
        maven {
            // WT published releases
            url 'https://s3.eu-central-1.amazonaws.com/artifacts.wisetime.com/mvn2/plugins'
            content {
                includeGroup "io.wisetime"
            }
        }
    }
    dependencies {
        classpath "org.openapitools:openapi-generator-gradle-plugin:3.3.4"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.20.0"
        classpath "io.wisetime:validate-version:[0.5.3,)"
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'application'
    id("io.freefair.lombok").version("3.8.4")
    id 'com.google.cloud.tools.jib' version '1.1.2'
    id "com.github.ben-manes.versions" version '0.22.0'
    id "fr.brouillard.oss.gradle.jgitver" version "0.9.1"

}

repositories {
    maven {
        // Google Maven Central mirror
        url 'https://maven-central.storage-download.googleapis.com/repos/central/data'
    }
}

apply plugin: 'org.openapi.generator'
apply from: "$rootDir/gradle/conf/checkstyle.gradle"
apply from: "$rootDir/gradle/conf/jacoco.gradle"
group = 'io.wisetime'

archivesBaseName = 'wisetime-connector'
sourceCompatibility = 1.8
targetCompatibility = 1.8
mainClassName = 'io.wisetime.connector.example.FolderWatchConnectApp'

jgitver {
    autoIncrementPatch false
}

tasks.openApiGenerate {
    generatorName = "jaxrs-spec"
    inputSpec = "https://raw.githubusercontent.com/wisetime-io/connect-api-spec/master/spec/openapi.yaml".toString()
    outputDir = "$projectDir".toString()
    modelPackage = "io.wisetime.generated.connect"
    generateApiTests = false
    generateModelDocumentation = false
    generateModelTests = false
    verbose = false

    onlyIf {
        // only re-generate java files if api_gen folder is missing
        return !new File(getProjectDir().getAbsolutePath() + "/src/gen/java").exists()
    }

    doLast {
        // after creating latest auto-generated object model, delete irrelevant files
        delete "${projectDir}/.openapi-generator"
        delete "${projectDir}/pom.xml"
        delete "${projectDir}/src/gen/java/org"
        delete "${projectDir}/src/main/openapi"
        delete "${projectDir}/src/gen/java/io/wisetime/generated/RestApplication.java"
    }
}

tasks.jib.dependsOn compileJava
tasks.compileJava.dependsOn tasks.openApiGenerate

sourceSets {
    main {
        java {
            // include auto-generated model files from spec in additional to our main bundle
            srcDir 'src/gen/java'
            srcDir 'src/main/java'
        }
    }
}

def taskRequestString = getGradle().getStartParameter().getTaskRequests().toString()
if (taskRequestString.contains("closeAndReleaseRepository")) {
    apply from: "$rootDir/gradle/publish_maven_central.gradle"
} else if (taskRequestString.contains("publish")) {
    apply from: "$rootDir/gradle/publish_s3_repo.gradle"
}

if (taskRequestString.contains("dependencyUpdates") || taskRequestString.contains("versionCheck")) {
    // add exclusions for reporting on updates and vulnerabilities
    apply from: "$rootDir/gradle/versionPluginConfig.gradle"
}

dependencies {

    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    compile 'com.sparkjava:spark-core:2.9.1'
    compile('com.sparkjava:spark-template-thymeleaf:2.7.1') {
        exclude group: 'com.sparkjava', module: 'spark-core'
        exclude group: 'org.thymeleaf', module: 'thymeleaf'
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
    compile 'org.thymeleaf:thymeleaf:3.0.11.RELEASE'

    compile 'joda-time:joda-time:2.9.9'

    compile 'org.apache.commons:commons-configuration2:2.4'
    compile 'org.apache.commons:commons-lang3:3.9'
    compile 'net.jodah:failsafe:1.1.0'

    // AWS dependencies
    compile ('com.amazonaws:aws-java-sdk-logs:1.11.611') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'commons-codec', module: 'commons-codec'
        exclude group: 'joda-time', module: 'joda-time'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }

    compile 'com.amazonaws:aws-java-sdk-cloudwatch:1.11.611'

    //  required by AWS SDK to log to logback via slf4j
    compile 'org.slf4j:jcl-over-slf4j:1.7.25'
    compile 'org.slf4j:jul-to-slf4j:1.7.25'

    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    compile 'com.fasterxml.jackson.core:jackson-core:2.9.8'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.9.8'

    compile 'org.apache.commons:commons-collections4:4.3'
    compile 'com.google.guava:guava:27.1-jre'
    compile 'commons-io:commons-io:2.6'

    compile 'org.xerial:sqlite-jdbc:3.28.0'
    compile 'org.codejargon:fluentjdbc:1.8.3'

    compile ('org.apache.httpcomponents:httpclient:4.5.8') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'commons-codec', module: 'commons-codec'
        exclude group: 'org.apache.httpcomponents', module: 'httpcore'
    }

    compile 'org.apache.httpcomponents:httpcore:4.4.11'
    compile('org.apache.httpcomponents:fluent-hc:4.5.8') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'commons-codec', module: 'commons-codec'
    }
    compile 'commons-codec:commons-codec:1.12'

    compile 'ch.qos.logback:logback-core:1.2.3'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'org.slf4j:slf4j-api:1.7.26'

    // required by activity text template engine
    compile 'org.freemarker:freemarker:2.3.28'

    // swagger-annotations and validation-api used in openApiGenerate
    compile 'io.swagger:swagger-annotations:1.5.3'
    compile 'javax.validation:validation-api:2.0.1.Final'

    testCompile('com.github.javafaker:javafaker:0.17.2') {
        exclude group: 'org.apache.commons', module: 'commons-lang3'
    }
    testCompile 'org.skyscreamer:jsonassert:1.5.0'
    testCompile 'org.junit.jupiter:junit-jupiter:5.5.1'
    testCompile 'org.mockito:mockito-core:2.27.0'
    testCompile 'org.assertj:assertj-core:3.12.2'
    testCompile 'io.github.benas:random-beans:3.9.0'
}

test {
    useJUnitPlatform()
    testLogging {
        // "passed", "skipped", "failed"
        events 'skipped', 'failed'
    }
}

ext.jacocoLimits = [
        'instruction': 70,
        'line'       : 70,
        'method'     : 70,
        'class'      : 80
]

tasks.withType(Checkstyle) {
    source = sourceSets.main.allJava.matching {
        exclude '**/generated/**/*'
    }
}

clean {
    delete "${projectDir}/out"
    delete "${projectDir}/.openapi-generator"
    delete "${projectDir}/pom.xml"
    delete "${projectDir}/src/gen/java"
}

jar {
    afterEvaluate  {
        manifest {
            attributes 'Implementation-Version': project.version
        }
    }
}