
apply plugin: 'signing'
apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'de.marcphilipp.nexus-publish'

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

// publishing to maven central
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.name
            // We publish release to MavenCentral via CI job with reuse of previously created artifact, so folder is not 
            // a git repository. Actual version is provided as property.
            version = project.version
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'WiseTime Connector'
                description = 'WiseTime Connector Library'
                url = 'https://wisetime.io/docs/connect/'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'wisetime'
                        name = 'WiseTime Team'
                        email = 'contact@wisetime.io'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/wisetime-io/wisetime-connector-java.git'
                    developerConnection = 'scm:git:https://github.com/wisetime-io/wisetime-connector-java.git'
                    url = 'https://github.com/wisetime-io/wisetime-connector-java'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username project.hasProperty('ossrhUsername') ? ossrhUsername : ""
                password project.hasProperty('ossrhPassword') ? ossrhPassword : ""
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    exclude 'io/wisetime/generated'
    exclude 'io/wisetime/connector/api_client/support'
    exclude 'io/wisetime/connector/example'
    exclude 'io/wisetime/connector/template/format'
    exclude 'io/wisetime/connector/template/loader'
    exclude 'io/wisetime/connector/testutils'
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

nexusStaging {
    username = project.hasProperty('ossrhUsername') ? ossrhUsername : ""
    password = project.hasProperty('ossrhPassword') ? ossrhPassword : ""
}

nexusPublishing {
    repositories {
        sonatype()
    }
}
